package com.github.peckb1.projecteuler.p041to050;

/**
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
 * <p>
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 * <p>
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
 * <p>
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and
 * D = |Pk − Pj| is minimised; what is the value of D?
 */
public class Problem44 {

    public static void main(String[] args) {
        System.out.println(new Problem44().pentagonalDifference());
    }

    public long pentagonalDifference() {
        long D = 0;
        boolean notFound = true;
        int index = 1;
        while (notFound) {
            long n = pentogonal(index);
            for (int previousIndex = index - 1; previousIndex > 0; previousIndex--) {
                long m = pentogonal(previousIndex);
                if (isPentagonal(n - m) && isPentagonal(n + m)) {
                    D = n - m;
                    notFound = false;
                    break;
                }
            }
            index++;
        }

        return D;
    }

    private long pentogonal(long index) {
        return (index * (3 * index - 1)) / 2;
    }

    private boolean isPentagonal(long n) {
        double x = (Math.sqrt(1 + 24 * n) + 1.0) / 6.0;
        return x == ((int) x);
    }

}
